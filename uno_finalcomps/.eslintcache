[{"/Users/amykim/Desktop/Uno_Comps/uno_finalcomps/src/index.js":"1","/Users/amykim/Desktop/Uno_Comps/uno_finalcomps/src/reportWebVitals.js":"2","/Users/amykim/Desktop/Uno_Comps/uno_finalcomps/src/App.js":"3","/Users/amykim/Desktop/Uno_Comps/uno_finalcomps/src/Components/Game/Game.js":"4","/Users/amykim/Desktop/Uno_Comps/uno_finalcomps/src/Components/Home/Home.js":"5","/Users/amykim/Desktop/Uno_Comps/uno_finalcomps/src/Components/Game/Card.js":"6","/Users/amykim/Desktop/Uno_Comps/uno_finalcomps/src/Components/Home/facebook/Facebook.js":"7"},{"size":500,"mtime":1606980970000,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1606980970000,"results":"10","hashOfConfig":"9"},{"size":493,"mtime":1637970513991,"results":"11","hashOfConfig":"9"},{"size":30574,"mtime":1638222312869,"results":"12","hashOfConfig":"9"},{"size":1701,"mtime":1636400459787,"results":"13","hashOfConfig":"9"},{"size":2044,"mtime":1636148808040,"results":"14","hashOfConfig":"9"},{"size":2323,"mtime":1636008191804,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1bhbaaw",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/amykim/Desktop/Uno_Comps/uno_finalcomps/src/index.js",[],["33","34"],"/Users/amykim/Desktop/Uno_Comps/uno_finalcomps/src/reportWebVitals.js",[],"/Users/amykim/Desktop/Uno_Comps/uno_finalcomps/src/App.js",[],"/Users/amykim/Desktop/Uno_Comps/uno_finalcomps/src/Components/Game/Game.js",["35","36","37","38","39","40"],"/Users/amykim/Desktop/Uno_Comps/uno_finalcomps/src/Components/Home/Home.js",["41","42"],"import React from \"react\";\nimport \"./Home.css\";\nimport {withRouter} from \"react-router\";\nimport Facebook from \"./facebook/Facebook\";\n\nclass Home extends React.Component{\n    constructor(){\n        super();\n    }\n    _clicked(){\n     \n        window.location.href=`/game`;\n \n     }\n    render(){\n        return(\n            <div className = \"home\">\n                <h1>Three! Two! Uno!</h1>\n                \n                <div className = \"title\">\n                    This is a text-based web application version of the classic card game Uno! \n                    <p>\n                    The rules are simple: try your best to discard all the cards that you are dealt.\n                    Any cards left that are not accounted for will be used to rank your status using a unique point system: \n                    </p>\n                    -20 points for every action card: skip, +2, reverse\n                    <br/>\n                    -50 points for every color changing card: wild +4, color change\n                    <br/>\n                    -face value for every corresponding number value card: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9\n                    <br/>\n                    <p>\n                    At any point, if you wish to restart the game, please press the \"Restart Game\" button located at \n                    the bottom of the game page.\n                    </p>\n                   \n                </div>\n                <button className = \"start\" onClick={() => this._clicked()}>\n                Start Game!    \n                </button>\n\n                <div className = \"go\">\n                </div>\n               \n            </div>\n        )\n    }\n}\n\nexport default withRouter(Home);","/Users/amykim/Desktop/Uno_Comps/uno_finalcomps/src/Components/Game/Card.js",["43"],"import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport './Card.css';\n\nclass Card extends React.Component {\n    constructor() {\n        super();\n    }\n\n    getCSS() {\n        if (!this.props.card.color) {\n            return \"cardBoxwhite\";\n        }\n        return \"cardBox\".concat(this.props.card.color);\n    }\n\n    onTrigger = () => {\n        this.props.onClick(this.props.card);\n    }\n\n    onTriggerPink = () => {\n        this.props.onClick(this.props.card, \"pink\");\n    }\n\n    onTriggerYellow = () => {\n        this.props.onClick(this.props.card, \"yellow\");\n    }\n\n    onTriggerGreen = () => {\n        this.props.onClick(this.props.card, \"green\");\n    }\n\n    onTriggerOrange = () => {\n        this.props.onClick(this.props.card, \"orange\");\n    }\n\n    render() {\n\n        if (!this.props.card) {\n            return null;\n        }\n        const numberCard =\n        <div className={this.getCSS()} onClick={this.onTrigger}>\n            {this.props.card.color}&nbsp;\n            {this.props.card.value}\n        </div>;\n\n        const actionCard =\n        <div className={this.getCSS()} onClick={this.onTrigger}>\n            {this.props.card.color ? this.props.card.color : \"\"} &nbsp;\n            {this.props.card.action}\n        </div>\n\n        const wildCard =\n        <div className={this.getCSS()}>\n        {this.props.card.color ? this.props.card.color : \"\"} &nbsp;\n        {this.props.card.action}\n            <div onClick={this.onTriggerYellow}>\n                Yellow\n            </div>\n            <div onClick={this.onTriggerGreen}>\n                Green\n            </div>\n            <div onClick={this.onTriggerPink}>\n                Pink\n            </div>\n            <div onClick={this.onTriggerOrange}>\n                Orange\n            </div>\n        </div>\n\n        return this.props.card.action ? (this.props.hand &&\n            (this.props.card.action === \"colorSwitch\" || this.props.card.action === \"+4\") ?\n            wildCard : actionCard): numberCard;\n    }\n}\n\nexport default withRouter(Card);","/Users/amykim/Desktop/Uno_Comps/uno_finalcomps/src/Components/Home/facebook/Facebook.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":3,"column":10,"nodeType":"50","messageId":"51","endLine":3,"endColumn":13},{"ruleId":"52","severity":1,"message":"53","line":13,"column":10,"nodeType":"54","messageId":"55","endLine":13,"endColumn":11},{"ruleId":"52","severity":1,"message":"53","line":13,"column":57,"nodeType":"54","messageId":"55","endLine":13,"endColumn":58},{"ruleId":"52","severity":1,"message":"56","line":13,"column":57,"nodeType":"54","messageId":"55","endLine":13,"endColumn":58},{"ruleId":"52","severity":1,"message":"56","line":13,"column":62,"nodeType":"54","messageId":"55","endLine":13,"endColumn":64},{"ruleId":"57","severity":1,"message":"58","line":287,"column":13,"nodeType":"59","messageId":"60","endLine":322,"endColumn":14},{"ruleId":"48","severity":1,"message":"61","line":4,"column":8,"nodeType":"50","messageId":"51","endLine":4,"endColumn":16},{"ruleId":"62","severity":1,"message":"63","line":7,"column":5,"nodeType":"64","messageId":"65","endLine":9,"endColumn":6},{"ruleId":"62","severity":1,"message":"63","line":6,"column":5,"nodeType":"64","messageId":"65","endLine":8,"endColumn":6},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'act' is defined but never used.","Identifier","unusedVar","no-mixed-operators","Unexpected mix of '^' and '&'. Use parentheses to clarify the intended order of operations.","BinaryExpression","unexpectedMixedOperator","Unexpected mix of '&' and '>>'. Use parentheses to clarify the intended order of operations.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Facebook' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]